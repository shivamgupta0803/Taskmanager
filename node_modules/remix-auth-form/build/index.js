"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FormStrategy = void 0;
const remix_auth_1 = require("remix-auth");
class FormStrategy extends remix_auth_1.Strategy {
    name = "form";
    async authenticate(request, sessionStorage, options) {
        let form = await this.readFormData(request, options);
        try {
            let user = await this.verify({ form, context: options.context, request });
            return this.success(user, request, sessionStorage, options);
        }
        catch (error) {
            if (error instanceof Error) {
                return await this.failure(error.message, request, sessionStorage, options, error);
            }
            if (typeof error === "string") {
                return await this.failure(error, request, sessionStorage, options, new Error(error));
            }
            return await this.failure("Unknown error", request, sessionStorage, options, new Error(JSON.stringify(error, null, 2)));
        }
    }
    async readFormData(request, options) {
        if (options.context?.formData instanceof FormData) {
            return options.context.formData;
        }
        return await request.formData();
    }
}
exports.FormStrategy = FormStrategy;
